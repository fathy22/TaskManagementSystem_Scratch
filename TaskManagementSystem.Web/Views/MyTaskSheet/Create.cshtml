@using TaskManagementSystem.Helpers.Enums;
@model TaskManagementSystem.TaskSheets.Dto.CreateTaskSheetDto
@{
    ViewData["Title"] = "Create Task";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var users = ViewBag.Users as IEnumerable<TaskManagementSystem.Core.Entities.ApplicationUser>;
    var teams = ViewBag.Teams as IEnumerable<TaskManagementSystem.Teams.Dto.TeamDto>;
    var tasks = ViewBag.Tasks as IEnumerable<TaskManagementSystem.TaskSheets.Dto.TaskSheetDto>;
    var taskSheetStatuses = Enum.GetValues(typeof(TaskSheetStatus)).Cast<TaskSheetStatus>().ToList();
    var TaskPriorities = Enum.GetValues(typeof(TaskPriority)).Cast<TaskPriority>().ToList();
}

<h2>Create User</h2>

<form asp-action="Create" method="post">
    <input type="hidden" id="attachmentId" name="attachmentId" />
    <div class="form-group">
        <label asp-for="Title"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="DueDate"></label>
        <input type="date" asp-for="DueDate" class="form-control" />
        <span asp-validation-for="DueDate" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label>Task Status</label>
        <select asp-for="TaskStatus" class="form-control">
            <option value="">Select</option>
            @foreach (var status in taskSheetStatuses)
            {
                <option value="@(Convert.ToInt32(status))">@status</option>
            }
        </select>
        <span asp-validation-for="TaskStatus" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label>Task Priority</label>
        <select asp-for="TaskPriority" class="form-control">
            <option value="">Select</option>
            @foreach (var priority in TaskPriorities)
            {
                <option value="@(Convert.ToInt32(priority))">@priority</option>
            }
        </select>
        <span asp-validation-for="TaskPriority" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="IsDependentOnAnotherTask"></label>
        <input type="checkbox" asp-for="IsDependentOnAnotherTask" id="toggleCheckbox" onclick="toggleDependentTaskDiv()" />
    </div>
    <div class="form-group" id="dependentTaskDiv" style="display:none;">
        <label>Dependent Task</label>
        <select asp-for="DependentTaskId" class="form-control">
            <option value="">Select</option>
            @foreach (var task in tasks)
            {
                <option value="@task.Id">@task.Title</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label class="col-md-3 col-form-label" for="AttachmentId">Attachment</label>
        <div class="col-md-9">
            <input type="file" id="fileInput" style="display:none;">
            <button type="button" id="uploadButton" style="background-color: #032f70; border-color: transparent; color: #fff;border-radius: 15px;padding: 4px 2%;">
                Upload File
            </button>
        </div>
        <span id="uploadedFileName" style="margin-left: 10px;"></span>
    </div>
    <button type="submit" class="btn btn-primary">Create</button>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
